# French stemming algorithm

## Design Notes

In French the verb endings **_\-ent_** and **_\-ons_** cannot be removed without unacceptable overstemming (of _accident_ and _garçons_ for example). The **_\-ons_** form is rarer, but **_\-ent_** forms are quite common, and will appear regularly throughout a stemmed vocabulary.

The rule to replace **_\-oux_** with **_\-ou_** will produce linguistically incorrect stems by removing **_x_** from **_époux_** and **_jaloux_**, but this is harmless as no unwanted conflation results.

The rule to replace **_\-aux_** with **_\-al_** stems **_travaux_** to **_traval_** and **_vitraux_** to **_vitral_** wheras **_\-ail_** would be lingusitically correct; similarly **_esquimaux_**, **_noyaux_** and **_tuyaux_** where **_\-au_** would be more correct. None of these seem to result in unwanted conflation though.

The suffix **_\-eux_** is removed if in _R2_. For a few short words (**_cheveux_**, **_jeux_**, **_lieux_** and **_neveux_**) removing **_\-x_** would conflate a plural form with its singular, but the complexity of the rule needed to avoid adversely affecting other short words ending **_\-eux_** does not seem justified for just four cases of understemming.

## The stemming algorithm

Letters in French include the following accented forms,

&ensp;&ensp;**_â &nbsp; à &nbsp; ç &nbsp; ë &nbsp; é &nbsp; ê &nbsp; è &nbsp; ï &nbsp; î &nbsp; ô &nbsp; û &nbsp; ù_**

The following letters are vowels:

&ensp;&ensp;**_a &nbsp; e &nbsp; i &nbsp; o &nbsp; u &nbsp; y &nbsp; â &nbsp; à &nbsp; ë &nbsp; é &nbsp; ê &nbsp; è &nbsp; ï &nbsp; î &nbsp; ô &nbsp; û &nbsp; ù_**

The first step removes elisions. If the word starts with one of **_c_** &nbsp; **_d_** &nbsp; **_j_** &nbsp; **_l_** &nbsp; **_m_** &nbsp; **_n_** &nbsp; **_s_** &nbsp; **_t_** &nbsp; or &nbsp; **_qu_**, followed by an apostrophe (**_'_**) which is not at the end of the word, then remove from the prefix of the word up to and including this apostrophe.

Assume the word is in lower case. Then, taking the letters in turn from the beginning to end of the word, put **_u_** or **_i_** into upper case when it is both preceded and followed by a vowel; put **_y_** into upper case when it is either preceded or followed by a vowel; and put **_u_** into upper case when it follows **_q_**. For example,

|     |     |     |     |     |
| --- | --- | --- | --- | --- |
| jouer |     | »   |     | joUer |
| ennuie |     | »   |     | ennuIe |
| yeux |     | »   |     | Yeux |
| quand |     | »   |     | qUand |
| croyiez |     | »   |     | croYiez |

In the last example, **_y_** becomes **_Y_** because it is between two vowels, but **_i_** does not become **_I_** because it is between **_Y_** and **_e_**, and **_Y_** is not defined as a vowel above.

(The upper case forms are not then classed as vowels — see [note](#sec-vowel-marking) on vowel marking.)

Replace **_ë_** and **_ï_** with **_He_** and **_Hi_**. The **_H_** marks the vowel as having originally had a diaeresis, while the vowel itself, lacking an accent, is able to match suffixes beginning in **_e_** or **_i_**.

_RV_ is defined as the region to the right of the first of these which is true (the examples show _RV_ underlined):

1.  The word starts with two vowels followed by another letter\
  \- e.g. _aimer_
2.  The word starts **_par_**\
  \- e.g. _parie_
3.  The word starts **_col_**\
  \- e.g. _colis_
4.  The word starts **_tap_**\
  \- e.g. _tapis_
5.  The word starts **_ni_** followed by any vowel\
  \- e.g. _niaises_
6.  The first vowel not at the beginning of the word\
  \- e.g. _adorer_, _voler_
7.  The end of the word - e.g. _arcs_ (RV is an empty region at the end of the word)

_R1_ is the region after the first non-vowel following a vowel, or the end of the word if there is no such non-vowel.

_R2_ is the region after the first non-vowel following a vowel in _R1_, or the end of the word if there is no such non-vowel. (See [note](#sec-r1r2) on _R1_ and _R2_.)

For example:

    f a m e u s e m e n t
         |......R1.......|
               |...R2....|

Note that _R1_ can contain _RV_ (_adorer_), and _RV_ can contain _R1_ (_voler_).

Below, ‘delete if in _R2_’ means that a found suffix should be removed if it lies entirely in _R2_, but not if it overlaps _R2_ and the rest of the word. ‘delete if in _R1_ and preceded by _X_’ means that _X_ itself does not have to come in _R1_, while ‘delete if preceded by _X_ in _R1_’ means that _X_, like the suffix, must be entirely in _R1_.

Start with step 1

Step 1: Standard suffix removal

&ensp;&ensp;Search for the longest among the following suffixes, and perform the action indicated.

&ensp;&ensp;&ensp;&ensp;**_ance &nbsp; iqUe &nbsp; isme &nbsp; able &nbsp; iste &nbsp; eux &nbsp; ances &nbsp; iqUes &nbsp; ismes &nbsp; ables &nbsp; istes_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _R2_

&ensp;&ensp;&ensp;&ensp;**_atrice &nbsp; ateur &nbsp; ation &nbsp; atrices &nbsp; ateurs &nbsp; ations_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _R2_

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_ic_**, delete if in _R2_, else replace by **_iqU_**

&ensp;&ensp;&ensp;&ensp;**_logie logies_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_log_** if in _R2_

&ensp;&ensp;&ensp;&ensp;**_usion &nbsp; ution &nbsp; usions &nbsp; utions_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_u_** if in _R2_

&ensp;&ensp;&ensp;&ensp;**_ence &nbsp; ences_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_ent_** if in _R2_

&ensp;&ensp;&ensp;&ensp;**_ement ements_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _RV_

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_iv_**, delete if in _R2_ (and if further preceded by **_at_**, delete if in _R2_), otherwise,

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_eus_**, delete if in _R2_, else replace by **_eux_** if in _R1_, otherwise,

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_abl_** or **_iqU_**, delete if in _R2_, otherwise,

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_ièr_** or **_Ièr_**, replace by **_i_** if in _RV_

&ensp;&ensp;&ensp;&ensp;**_ité ités_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _R2_

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_abil_**, delete if in _R2_, else replace by **_abl_**, otherwise,

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_ic_**, delete if in _R2_, else replace by **_iqU_**, otherwise,

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_iv_**, delete if in _R2_

&ensp;&ensp;&ensp;&ensp;**_if &nbsp; ive &nbsp; ifs &nbsp; ives_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _R2_

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_at_**, delete if in _R2_ (and if further preceded by **_ic_**, delete if in _R2_, else replace by **_iqU_**)

&ensp;&ensp;&ensp;&ensp;**_eaux_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_eau_**

&ensp;&ensp;&ensp;&ensp;**_aux_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_al_** if in _R1_

&ensp;&ensp;&ensp;&ensp;**_oux_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_ou_** if preceded by one of **_b_** &nbsp; **_h_** &nbsp; **_j_** &nbsp; **_l_** &nbsp; **_n_** &nbsp; **_p_**

&ensp;&ensp;&ensp;&ensp;**_euse euses_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _R2_, else replace by **_eux_** if in _R1_

&ensp;&ensp;&ensp;&ensp;**_issement issements_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _R1_ and preceded by a non-vowel

&ensp;&ensp;&ensp;&ensp;**_amment_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_ant_** if in _RV_

&ensp;&ensp;&ensp;&ensp;**_emment_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_ent_** if in _RV_

&ensp;&ensp;&ensp;&ensp;**_ment ments_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if preceded by a vowel in _RV_

Do step _2a_ if either no ending was removed by step 1, or if one of endings **_amment_**, **_emment_**, **_ment_**, **_ments_** was found.

Step _2a_: Verb suffixes beginning **_i_**

&ensp;&ensp;Search for the longest among the following suffixes in RV and if found, delete if the preceding character is also in RV and is neither a vowel nor **_H_**.

&ensp;&ensp;&ensp;&ensp;**_îmes ît îtes i ie ies ir ira irai iraIent irais irait iras irent irez iriez irions irons iront is issaIent issais issait issant issante issantes issants isse issent isses issez issiez issions issons it_**

Do step _2b_ if step _2a_ was done, but failed to remove a suffix.

Step _2b_: Other verb suffixes

&ensp;&ensp;Search for the longest among the following suffixes in RV, and perform the action indicated.

&ensp;&ensp;&ensp;&ensp;**_ions_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _R2_

&ensp;&ensp;&ensp;&ensp;**_é &nbsp; ée &nbsp; ées &nbsp; és &nbsp; èrent &nbsp; er &nbsp; era &nbsp; erai &nbsp; eraIent &nbsp; erais &nbsp; erait &nbsp; eras &nbsp; erez &nbsp; eriez &nbsp; erions &nbsp; erons &nbsp; eront &nbsp; ez &nbsp; iez_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete

&ensp;&ensp;&ensp;&ensp;**_âmes &nbsp; ât &nbsp; âtes &nbsp; a &nbsp; ai &nbsp; aIent &nbsp; ait &nbsp; ant &nbsp; ante &nbsp; antes &nbsp; ants &nbsp; as &nbsp; asse &nbsp; assent &nbsp; asses &nbsp; assiez &nbsp; assions_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;if preceded by **_e_** which is also in RV, delete the **_e_** as well

&ensp;&ensp;&ensp;&ensp;**_ais &nbsp; aise &nbsp; aises_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete unless preceded by one of: **_al_** preceded by exactly one character, **_auv_**, **_épl_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;If the last step to be obeyed — either step 1, _2a_ or _2b_ — altered the word, do step 3

Step 3

&ensp;&ensp;Replace final **_Y_** with **_i_** or final **_ç_** with **_c_**

Alternatively, if the last step to be obeyed did not alter the word, do step 4

Step 4: Residual suffix

&ensp;&ensp;If the word ends **_s_**, not preceded by **_a_**, **_i_** (unless itself preceded by **_H_**), **_o_**, **_u_**, **_è_** or **_s_**, delete it.

&ensp;&ensp;In the rest of step 4, all tests are confined to the _RV_ region.

&ensp;&ensp;Search for the longest among the following suffixes, and perform the action indicated.

&ensp;&ensp;&ensp;&ensp;**_ion_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete if in _R2_ and preceded by **_s_** or **_t_**

&ensp;&ensp;&ensp;&ensp;**_ier &nbsp; ière &nbsp; Ier &nbsp; Ière_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;replace with **_i_**

&ensp;&ensp;&ensp;&ensp;**_e_**

&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;delete
  
&ensp;&ensp;(So note that **_ion_** is removed only when it is in _R2_ — as well as being in _RV_ — and preceded by **_s_** or **_t_** which must be in _RV_.)

Always do steps 5 and 6.

Step 5: Undouble

&ensp;&ensp;If the word ends **_enn_**, **_onn_**, **_ett_**, **_ell_** or **_eill_**, delete the last letter

Step 6: Un-accent

If the words ends **_é_** or **_è_** followed by at least one non-vowel, remove the accent from the **_e_**.

And finally:

&ensp;&ensp;Turn any remaining **_I_**, **_U_** and **_Y_** letters in the word back into lower case.

&ensp;&ensp;Turn **_He_** and **_Hi_** back into **_ë_** and **_ï_**, and remove any remaining **_H_**.

## History of functional changes to the algorithm

*   September 2002: New rule for _\-ièr_
*   Snowball 2.0.0: Suffixes that begin with a diaereses are now removed (done by replacing **_ë_** and **_ï_** with **_He_** and **_Hi_**, during stemming then undoing afterwards).
*   Snowball 3.0.0: Added a new first step which removes elisions.
*   Snowball 3.0.0: Added rule to replace **_\-oux_** with **_\-ou_**.
*   Snowball 3.0.0: Added RV exceptions for **_ni_** followed by a vowel.
*   Snowball 3.0.0: Restrict removal of **_\-ais_**; remove **_\-aise_** and **_\-aises_**.